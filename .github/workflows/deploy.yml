# This is a basic workflow to help you get started with Actions

name: deploy

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.4
        with:
          # Install just one or all simultaneously
          cli: 1.10.1.693
          
      - name: Cache maven
        uses: actions/cache@v2
        env:
          cache-name: cache-maven
        with:
          path: ~/.m2
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-
            
      - name: Build
        run: |
          mkdir classes
          clojure -M:aot
          clojure -M:pack mach.pack.alpha.aws-lambda -C:aot lambda.zip
      
      - name: Deploy
        uses: appleboy/lambda-action@v0.1.3
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: ap-northeast-2
          function_name: action-test
          role: ${{ secrets.AWS_LAMBDA_ROLE }}
          zip_file: ./lambda.zip
          dry_run: true


